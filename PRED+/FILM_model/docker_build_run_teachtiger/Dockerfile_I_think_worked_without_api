FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04

# Setup basic packages
RUN apt-get update
RUN apt install sudo 
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    build-essential \
    git \
    curl \
    vim \
    ca-certificates \
    libjpeg-dev \
    libpng-dev \
    libglfw3-dev \
    libglm-dev \
    libx11-dev \
    libomp-dev \
    libegl1-mesa-dev \
    pkg-config \
    wget \
    zip \
    htop \
    tmux \
    unzip \
    terminator \
    libsm6 \
    libxext6 \
    libxrender-dev \
    gedit \
    git \
    openssh-client \
    unzip \
    htop \
    libopenni-dev \
    apt-utils \
    usbutils \
    dialog \
    ffmpeg \
    nvidia-settings \
    libffi-dev \
    flex \
    bison \
    build-essential \
    git \
    wget \
    module-init-tools \
    pciutils \
    xserver-xorg \
    xserver-xorg-video-fbdev \
    xauth 
    
RUN apt-get install -y  --no-install-recommends mesa-utils && rm -rf /var/lib/apt/lists/* 

# Install conda
#RUN wget -O $HOME/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  &&\
RUN wget -O $HOME/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-py38_4.11.0-Linux-x86_64.sh &&\
    chmod +x ~/miniconda.sh &&\
    ~/miniconda.sh -b -p /custom/conda &&\
    rm ~/miniconda.sh &&\
    /custom/conda/bin/conda install numpy pyyaml scipy ipython mkl mkl-include &&\
    /custom/conda/bin/conda clean -ya
ENV PATH /custom/conda/bin:$PATH

# Install cmake
RUN wget https://github.com/Kitware/CMake/releases/download/v3.14.0/cmake-3.14.0-Linux-x86_64.sh
RUN mkdir /opt/cmake
RUN sh /cmake-3.14.0-Linux-x86_64.sh --prefix=/opt/cmake --skip-license
RUN ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake
RUN cmake --version

# Setup habitat-sim
#RUN git clone https://github.com/facebookresearch/habitat-sim.git
#RUN /bin/bash -c "cd habitat-sim; git checkout tags/v0.1.5; pip install -r requirements.txt; python setup.py install --headless --with-cuda"

# Install challenge specific habitat-api
RUN git clone https://github.com/facebookresearch/habitat-api.git
RUN /bin/bash -c "cd habitat-api; git checkout tags/v0.1.5; pip install -e ."
RUN /bin/bash -c "cd habitat-api; wget http://dl.fbaipublicfiles.com/habitat/habitat-test-scenes.zip; unzip habitat-test-scenes.zip"


# Install project specific packages
RUN /bin/bash -c "apt-get update; apt-get install -y libsm6 libxext6 libxrender-dev; pip install opencv-python"
RUN /bin/bash -c "pip install --upgrade cython numpy"

# Install detectron2
RUN /bin/bash -c "python -m pip install detectron2 -f https://dl.fbaipublicfiles.com/detectron2/wheels/cu102/torch1.8/index.html"
#From TEACH
COPY ./requirements_teach_and_fim_ITW.txt /tmp/requirements.txt
RUN /bin/bash -c "pip install -r /tmp/requirements.txt"
RUN /bin/bash -c "pip install -U scikit-fmm"
RUN /bin/bash -c "pip install numpy==1.22.3"

#Install huggingface
RUN /bin/bash -c "pip install transformers==4.9.2"

#FILM for above
#################TEACH Submission Docker for now

#FROM python:3.9
#ARG MODEL_VARIANT FILM

# upgrade pip to latest version
RUN curl -s https://bootstrap.pypa.io/get-pip.py -o get-pip.py && \
    python3 get-pip.py --force-reinstall && \
    rm get-pip.py


#COPY . .
#RUN pip install -e .
#COPY ./FILM_model/pre_download_bert.py /tmp/pre_download_bert.py
#RUN /bin/bash -c "python /tmp/pre_download_bert.py"
#EXPOSE 5000

#ENV SPLIT=valid_seen

#CMD teach_api --model_module teach.inference.FILM_teach_model --model_class FILMModel  --data_dir /data --images_dir /images \
#--split $SPLIT 